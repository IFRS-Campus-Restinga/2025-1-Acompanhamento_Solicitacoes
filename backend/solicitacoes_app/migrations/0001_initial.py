# Generated by Django 5.0.3 on 2025-05-24 18:08

import datetime
import django.core.validators
import django.db.models.deletion
import solicitacoes_app.models.multi_file_field
import solicitacoes_app.models.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('nome', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(6)])),
                ('codigo', models.CharField(max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(3)])),
                ('tipo_periodo', models.CharField(choices=[('Anual', 'Anual'), ('Semestral', 'Semestral')], default='Semestral', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disponibilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formulario', models.CharField(choices=[('TRANCAMENTODISCIPLINA', 'Trancamento de Disciplina'), ('TRANCAMENTOMATRICULA', 'Trancamento de Matrícula'), ('DISPENSAEDFISICA', 'Dispensa de Educação Física'), ('DESISTENCIAVAGA', 'Desistência de Vaga'), ('EXERCICIOSDOMICILIARES', 'Exercícios Domiciliares'), ('ABONOFALTAS', 'Abono de Faltas'), ('ENTREGACERTIFICADOS', 'Entrega de Certificados')], max_length=50, unique=True, verbose_name='Formulário')),
                ('sempre_disponivel', models.BooleanField(default=True, verbose_name='Sempre disponível?')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de término')),
                ('ativo', models.BooleanField(default=True, verbose_name='Registro ativo?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_formulario', models.CharField(choices=[('TRANCAMENTODISCIPLINA', 'Trancamento de Disciplina'), ('TRANCAMENTOMATRICULA', 'Trancamento de Matrícula'), ('DISPENSAEDFISICA', 'Dispensa de Educação Física'), ('DESISTENCIAVAGA', 'Desistência de Vaga'), ('EXERCICIOSDOMICILIARES', 'Exercícios Domiciliares'), ('ABONOFALTAS', 'Abono de Faltas'), ('ENTREGACERTIFICADOS', 'Entrega de Certificados')], max_length=60, null=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('posse_solicitacao', models.CharField(choices=[('Aluno', 'Aluno'), ('Coordenação', 'Coordenacao'), ('CRE', 'Cre')], default='Coordenação', max_length=20, verbose_name='Responsável Atual pela Solicitação')),
                ('data_solicitacao', models.DateField(help_text='Escreva aqui a data da solicitação', verbose_name='Data da Solicitação:')),
                ('data_emissao', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Em Análise', 'Em Analise'), ('Em Emissão', 'Em Emissao'), ('Aprovado', 'Aprovado'), ('Reprovado', 'Reprovado'), ('Registrado', 'Registrado'), ('Cancelado', 'Cancelado')], default='Em Análise', max_length=20, verbose_name='Status da Solicitação')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotivoAbono',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message='A descrição não pode conter caracteres especiais.', regex='^[\\w\\s.,;:!?()áéíóúâêîôûãõçÁÉÍÓÚÂÊÎÔÛÃÕÇ-]+$')], verbose_name='Descrição')),
                ('tipo_falta', models.CharField(choices=[('FA', 'Falta Abonada'), ('FJ', 'Falta Justificada')], max_length=20, verbose_name='Tipo de Falta')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotivoDispensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(help_text='Digite o motivo da dispensa', max_length=200, validators=[django.core.validators.MinLengthValidator(9)], verbose_name='Descrição')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotivoExercicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(help_text='Digite o motivo da dispensa', max_length=200, validators=[django.core.validators.MinLengthValidator(9)], verbose_name='Descrição')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nome',
            fields=[
                ('nome', models.CharField(max_length=255, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(6)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nome', models.CharField(help_text='Escreva aqui o nome', max_length=100, verbose_name='Nome:')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('username', models.CharField(blank=True, help_text='Nome de usuário para login alternativo', max_length=150, null=True, unique=True)),
                ('email', models.EmailField(help_text='Escreva aqui o email', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email:')),
                ('cpf', models.CharField(blank=True, help_text='Escreva aqui o CPF', max_length=11, null=True, unique=True, validators=[solicitacoes_app.models.validators.validar_cpf], verbose_name='CPF:')),
                ('telefone', models.CharField(blank=True, help_text='Escreva aqui o telefone', max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='O telefone deve conter 10 ou 11 dígitos numéricos.', regex='^\\d{10,11}$')], verbose_name='Telefone:')),
                ('data_nascimento', models.DateField(blank=True, help_text='Escreva aqui a data de nascimento', null=True, validators=[solicitacoes_app.models.validators.validar_idade], verbose_name='Data nascimento:')),
                ('status_usuario', models.CharField(choices=[('Ativo', 'Ativo'), ('Inativo', 'Inativo'), ('Em Analise', 'Em Analise'), ('Novo', 'Novo')], default='Novo', max_length=20, verbose_name='Status do Usuario')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=20, unique=True)),
                ('ano_ingresso', models.IntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2025)])),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='aluno', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siape', models.IntegerField(unique=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='coordenador', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coordenador',
                'verbose_name_plural': 'Coordenadores',
            },
        ),
        migrations.CreateModel(
            name='CRE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siape', models.IntegerField(unique=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='cre', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CRE',
                'verbose_name_plural': 'CREs',
            },
        ),
        migrations.CreateModel(
            name='FormularioTrancamentoMatricula',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('motivo_solicitacao', models.TextField()),
            ],
            options={
                'verbose_name': 'Formulário de Trancamento de Matrícula',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='aluno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='aluno', to='solicitacoes_app.aluno'),
        ),
        migrations.CreateModel(
            name='Mandato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio_mandato', models.DateField()),
                ('fim_mandato', models.DateField(blank=True, null=True)),
                ('coordenador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandatos_coordenador', to='solicitacoes_app.coordenador')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandatos_curso', to='solicitacoes_app.curso')),
            ],
            options={
                'verbose_name': 'Mandato',
                'verbose_name_plural': 'Mandatos',
            },
        ),
        migrations.CreateModel(
            name='Ppc',
            fields=[
                ('codigo', models.CharField(max_length=30, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(5)])),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ppcs', to='solicitacoes_app.curso')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('nome', models.CharField(help_text='Digitar o nome da disciplina:', max_length=100, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Disciplina')),
                ('codigo', models.CharField(help_text='Digitar o código da disciplina:', max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Codigo')),
                ('periodo', models.CharField(choices=[('1º Ano', '1º Ano'), ('2º Ano', '2º Ano'), ('3º Ano', '3º Ano'), ('4º Ano', '4º Ano'), ('1º Semestre', '1º Semestre'), ('2º Semestre', '2º Semestre'), ('3º Semestre', '3º Semestre'), ('4º Semestre', '4º Semestre'), ('5º Semestre', '5º Semestre'), ('6º Semestre', '6º Semestre'), ('7º Semestre', '7º Semestre'), ('8º Semestre', '8º Semestre'), ('9º Semestre', '9º Semestre'), ('10º Semestre', '10º Semestre')], default='1º Ano', help_text='Selecionar o semestre/ano da disciplina:', max_length=20, verbose_name='Período')),
                ('ppc', models.ForeignKey(help_text='Selecionar o PPC ao qual a disciplina pertence:', on_delete=django.db.models.deletion.CASCADE, related_name='disciplinas', to='solicitacoes_app.ppc', verbose_name='PPC')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='aluno',
            name='ppc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ppcs', to='solicitacoes_app.ppc'),
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='solicitacoes_app.aluno')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Digitar o nome da turma:', max_length=100, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Turma')),
                ('disciplinas', models.ManyToManyField(help_text='Selecionar as disciplinas da turma:', related_name='turmas', to='solicitacoes_app.disciplina', verbose_name='Disciplinas')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormAbonoFalta',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('aluno_nome', models.CharField(help_text='Nome do aluno', max_length=50, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nome do Aluno')),
                ('matricula', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(1)])),
                ('data_inicio_afastamento', models.DateField(default=datetime.date.today, verbose_name='Data de início do afastamento')),
                ('data_fim_afastamento', models.DateField(default=datetime.date.today, verbose_name='Data de fim do afastamento')),
                ('acesso_moodle', models.BooleanField(blank=True, default=False)),
                ('perdeu_atividades', models.BooleanField(blank=True, default=False)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solicitacoes_app.curso', verbose_name='Curso')),
                ('motivo_solicitacao', models.ForeignKey(help_text='Escolha seu motivo da solicitação', on_delete=django.db.models.deletion.RESTRICT, to='solicitacoes_app.motivoabono', verbose_name='Motivo da Solicitação')),
            ],
            options={
                'verbose_name': 'Formulário de Abono de Faltas',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.CreateModel(
            name='FormDesistenciaVaga',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('aluno_nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('matricula', models.CharField(max_length=20)),
                ('tipo_curso', models.CharField(choices=[('medio_integrado', 'Ensino Médio Integrado'), ('subsequente', 'Curso Subsequente'), ('eja', 'Curso EJA'), ('superior', 'Curso Superior')], max_length=20)),
                ('motivo_solicitacao', models.TextField()),
                ('atestado_vaga_nova_escola', models.FileField(blank=True, help_text='Somente necessário se Ensino Medio', null=True, upload_to='desistencia/', verbose_name='Atestado de vaga da nova escola')),
                ('doc_identificacao_responsavel', models.FileField(blank=True, help_text='Somente necessário se Ensino Medio', null=True, upload_to='desistencia/', verbose_name='Documento de identificação do responsável legal')),
                ('declaracao_biblioteca', models.FileField(upload_to='desistencia/', verbose_name='Declaração de Nada Consta da Biblioteca')),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='formularios_desistencia_vaga', to='solicitacoes_app.curso')),
            ],
            options={
                'verbose_name': 'Formulário de Desistência de Vaga',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.CreateModel(
            name='FormDispensaEdFisica',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('turma', models.CharField(help_text='Digite sua turma', max_length=10, verbose_name='Turma')),
                ('ano_semestre_ingresso', models.CharField(help_text='Digite o ano/semestre de ingresso', max_length=7, verbose_name='Ano/Semestre de Ingresso')),
                ('observacoes', models.CharField(blank=True, help_text='Digite suas observações', max_length=300, null=True, verbose_name='Observações')),
                ('anexos', solicitacoes_app.models.multi_file_field.MultiFileField(help_text='Selecione seus arquivos', verbose_name='Anexo(s)')),
                ('motivo_solicitacao', models.ForeignKey(help_text='Escolha seu motivo da solicitação', on_delete=django.db.models.deletion.RESTRICT, to='solicitacoes_app.motivodispensa', verbose_name='Motivo da Solicitação')),
            ],
            options={
                'verbose_name': 'Formulário de Dispensa de Educação Física',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.CreateModel(
            name='FormEntregaAtivCompl',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('anexos', solicitacoes_app.models.multi_file_field.MultiFileField(help_text='Selecione seus arquivos', verbose_name='Anexo(s)')),
                ('disciplinas', models.ManyToManyField(help_text='Selecione as disciplinas', to='solicitacoes_app.disciplina', verbose_name='Disciplinas')),
            ],
            options={
                'verbose_name': 'Formulário de Atividades Complementares',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.CreateModel(
            name='FormExercicioDomiciliar',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('periodo', models.CharField(choices=[('1º Ano', '1º Ano'), ('2º Ano', '2º Ano'), ('3º Ano', '3º Ano'), ('4º Ano', '4º Ano'), ('1º Semestre', '1º Semestre'), ('2º Semestre', '2º Semestre'), ('3º Semestre', '3º Semestre'), ('4º Semestre', '4º Semestre'), ('5º Semestre', '5º Semestre'), ('6º Semestre', '6º Semestre'), ('7º Semestre', '7º Semestre'), ('8º Semestre', '8º Semestre'), ('9º Semestre', '9º Semestre'), ('10º Semestre', '10º Semestre')], default='1º Semestre', help_text='Período das disciplinas', max_length=20, verbose_name='Período')),
                ('motivo_solicitacao', models.CharField(choices=[('saude', 'Problemas de saúde, conforme inciso I do art. 142 da OD.'), ('maternidade', 'Licença Maternidade, conforme inciso II do art. 142 da OD.'), ('familiar', 'Acompanhamento de familiar (primeiro grau) com problemas de saúde, inciso III, art. 142 da OD.'), ('aborto_ou_falecimento', 'Gestantes que sofreram aborto, falecimento do recém-nascido ou natimorto (IV, 142, OD)'), ('adocao', 'Adoção de criança, conforme inciso V, art. 142 da OD.'), ('conjuge', 'Licença cônjuge/companheiro de parturiente/puerperas, conforme inciso VI do art. 142 da OD.'), ('outro', 'Outro')], max_length=30, verbose_name='Motivo da Solicitação')),
                ('outro_motivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Motivo')),
                ('data_inicio_afastamento', models.DateField(default=datetime.date.today, verbose_name='Data de Início do Afastamento')),
                ('data_fim_afastamento', models.DateField(default=datetime.date.today, verbose_name='Data de Fim do Afastamento')),
                ('documento_apresentado', models.CharField(choices=[('atestado', 'Atestado médico'), ('certidao_nascimento', 'Certidão de nascimento'), ('termo_guarda', 'Termo judicial de guarda'), ('certidao_obito', 'Certidão de óbito'), ('justificativa_propria', 'Justificativa de próprio punho para falta da documentação'), ('outro', 'Outro')], max_length=30, verbose_name='Documento Apresentado')),
                ('outro_documento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Outro Documento')),
                ('arquivos', models.FileField(blank=True, null=True, upload_to='documentos_exercicios_domiciliares/%Y/%m/%d/', verbose_name='Arquivos Anexados')),
                ('consegue_realizar_atividades', models.BooleanField(verbose_name='Consegue Realizar Atividades Remotas')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formularios_exercicios_domiciliares', to='solicitacoes_app.curso', verbose_name='Curso')),
                ('disciplinas', models.ManyToManyField(to='solicitacoes_app.disciplina', verbose_name='Disciplinas relacionadas')),
                ('ppc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercicios_domiciliares', to='solicitacoes_app.ppc')),
            ],
            options={
                'verbose_name': 'Formulário de Exercícios Domiciliares',
                'verbose_name_plural': 'Formulários de Exercícios Domiciliares',
                'ordering': ['-data_solicitacao'],
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
        migrations.CreateModel(
            name='Anexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anexo', models.FileField(max_length=4096, upload_to='docs/', verbose_name='Anexo(s)')),
                ('form_abono_falta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abonos_anexos', to='solicitacoes_app.formabonofalta')),
                ('form_desistencia_vaga', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='desistencia_anexos', to='solicitacoes_app.formdesistenciavaga')),
                ('form_exercicos_domiciliares', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercicios_anexos', to='solicitacoes_app.formexerciciodomiciliar')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormTrancDisciplina',
            fields=[
                ('solicitacao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='solicitacoes_app.solicitacao')),
                ('ingressante', models.BooleanField(default=False, help_text='Marque se o aluno é ingressante. Essa informação é importante para limitar a quantidade de trancamentos.')),
                ('motivo_solicitacao', models.TextField()),
                ('disciplinas', models.ManyToManyField(help_text='Selecione as disciplinas que deseja trancar', related_name='formularios_trancamento', to='solicitacoes_app.disciplina')),
            ],
            options={
                'verbose_name': 'Formulário de Trancamento de Componente Curricular',
                'verbose_name_plural': 'Formulários de Trancamento de Componente Curricular',
            },
            bases=('solicitacoes_app.solicitacao',),
        ),
    ]
